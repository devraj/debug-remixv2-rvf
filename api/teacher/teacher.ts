/**
 * Generated by orval v6.17.0 üç∫
 * Do not edit manually.
 * harvest-api
 *  HarvestOS is a custom learning management platform for SERC

    It purposefully blends the learning management system with the
    game based learning platform to create a unique learning.

    
 * OpenAPI spec version: 0.3.5
 */
import axios from 'axios'
import type {
  AxiosRequestConfig,
  AxiosResponse
} from 'axios'
import type {
  TeacherAssignmentResponse,
  SchoolClassAbridgedResponse,
  LearnTOCAbridgedResponse,
  LearnUnitVideoDetailResponse,
  StudentEnrollmentResponse,
  TeachableUnitAbridgedResponse,
  TeachableUnitDetailResponse,
  WeeklyTopicAbridgedResponse,
  WeeklyTopicDetailResponse
} from '.././models'



  /**
 * Get the summary current class for a teacher
 * @summary Get All Teacher Classes
 */
export const getAllTeacherClasses = <TData = AxiosResponse<TeacherAssignmentResponse[]>>(
     options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.get(
      `/api/school/teacher/class`,options
    );
  }
/**
 * Get a particular class detail
 * @summary Get Teacher Class By Id
 */
export const getTeacherClassById = <TData = AxiosResponse<SchoolClassAbridgedResponse>>(
    classId: string, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.get(
      `/api/school/teacher/class/${classId}`,options
    );
  }
/**
 * Get the summary current class for a teacher
 * @summary Get Teacher Class Toc
 */
export const getTeacherClassToc = <TData = AxiosResponse<LearnTOCAbridgedResponse>>(
    classId: string, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.get(
      `/api/school/teacher/class/${classId}/learn`,options
    );
  }
/**
 * Get a professional development video
 * @summary Get Professional Development Video
 */
export const getProfessionalDevelopmentVideo = <TData = AxiosResponse<LearnUnitVideoDetailResponse>>(
    classId: string,
    videoId: string, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.get(
      `/api/school/teacher/class/${classId}/learn/video/${videoId}`,options
    );
  }
/**
 * Get the students for a teacher's class

If an incorrect ID is provided then you will get a blank
list of students.
 * @summary Get Teacher Class Students Summary
 */
export const getTeacherClassStudentsSummary = <TData = AxiosResponse<StudentEnrollmentResponse[]>>(
    classId: string, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.get(
      `/api/school/teacher/class/${classId}/student`,options
    );
  }
/**
 * Create a new student in the teacher's class
 * @summary Create Teacher Class Student
 */
export const createTeacherClassStudent = <TData = AxiosResponse<unknown>>(
    classId: string, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.post(
      `/api/school/teacher/class/${classId}/student`,undefined,options
    );
  }
/**
 * Get details of a particular studdent in a teacher's class
 * @summary Get Teacher Class Student Details
 */
export const getTeacherClassStudentDetails = <TData = AxiosResponse<StudentEnrollmentResponse>>(
    classId: string,
    studentId: string, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.get(
      `/api/school/teacher/class/${classId}/student/${studentId}`,options
    );
  }
/**
 * Update details of a student in a teacher's class
 * @summary Update Teacher Class Student Details
 */
export const updateTeacherClassStudentDetails = <TData = AxiosResponse<unknown>>(
    classId: string,
    studentId: string, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.put(
      `/api/school/teacher/class/${classId}/student/${studentId}`,undefined,options
    );
  }
/**
 * End the enrolment of a student from a teacher's class
 * @summary Remove Student From Teacher Class
 */
export const removeStudentFromTeacherClass = <TData = AxiosResponse<unknown>>(
    classId: string,
    studentId: string, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.delete(
      `/api/school/teacher/class/${classId}/student/${studentId}`,options
    );
  }
/**
 * @summary Get All Units Summary For Class
 */
export const getAllUnitsSummaryForClass = <TData = AxiosResponse<TeachableUnitAbridgedResponse[]>>(
    classId: string, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.get(
      `/api/school/teacher/class/${classId}/lesson`,options
    );
  }
/**
 * Get the the detail of a unit for a class

This returns the overview content for the class and the
overview of the topics inside each class

Note that units are versioned so you will get the version that
is associated to this particular instance of the class
 * @summary Get Class Unit Detail For Class
 */
export const getClassUnitDetailForClass = <TData = AxiosResponse<TeachableUnitDetailResponse>>(
    classId: string,
    unitId: string, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.get(
      `/api/school/teacher/class/${classId}/lesson/unit/${unitId}`,options
    );
  }
/**
 * Get the the summary of all the topics in a unit

While this is unnecessary for the current UI, it's been provisioned
to be compliant to the API spec

Note that units are versioned so you will get the version that
is associated to this particular instance of the class
 * @summary Get Topics Summary For Unit And Class
 */
export const getTopicsSummaryForUnitAndClass = <TData = AxiosResponse<WeeklyTopicAbridgedResponse[]>>(
    classId: string,
    unitId: string, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.get(
      `/api/school/teacher/class/${classId}/lesson/unit/${unitId}/topic`,options
    );
  }
/**
 * Get the the detail of a topic

Note that units are versioned so you will get the version that
is associated to this particular instance of the class
 * @summary Get Topic Detail For Unit And Class
 */
export const getTopicDetailForUnitAndClass = <TData = AxiosResponse<WeeklyTopicDetailResponse>>(
    classId: string,
    unitId: string,
    topicId: string, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.get(
      `/api/school/teacher/class/${classId}/lesson/unit/${unitId}/topic/${topicId}`,options
    );
  }
export type GetAllTeacherClassesResult = AxiosResponse<TeacherAssignmentResponse[]>
export type GetTeacherClassByIdResult = AxiosResponse<SchoolClassAbridgedResponse>
export type GetTeacherClassTocResult = AxiosResponse<LearnTOCAbridgedResponse>
export type GetProfessionalDevelopmentVideoResult = AxiosResponse<LearnUnitVideoDetailResponse>
export type GetTeacherClassStudentsSummaryResult = AxiosResponse<StudentEnrollmentResponse[]>
export type CreateTeacherClassStudentResult = AxiosResponse<unknown>
export type GetTeacherClassStudentDetailsResult = AxiosResponse<StudentEnrollmentResponse>
export type UpdateTeacherClassStudentDetailsResult = AxiosResponse<unknown>
export type RemoveStudentFromTeacherClassResult = AxiosResponse<unknown>
export type GetAllUnitsSummaryForClassResult = AxiosResponse<TeachableUnitAbridgedResponse[]>
export type GetClassUnitDetailForClassResult = AxiosResponse<TeachableUnitDetailResponse>
export type GetTopicsSummaryForUnitAndClassResult = AxiosResponse<WeeklyTopicAbridgedResponse[]>
export type GetTopicDetailForUnitAndClassResult = AxiosResponse<WeeklyTopicDetailResponse>
